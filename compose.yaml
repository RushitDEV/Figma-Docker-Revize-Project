services:
  application:
    build:
      context: .
      dockerfile: Dockerfile
    extra_hosts: [ "host.docker.internal:host-gateway" ]
    volumes:
      - ./:/var/www/html
      - ./docker/nginx/http.d/default.conf:/etc/nginx/http.d/default.conf
      - ./docker/php.ini:/usr/local/etc/php/conf.d/php.ini
      - ./docker/php-fpm.conf:/usr/local/etc/php-fpm.conf
      - ./docker/php-fpm.d/www.conf:/usr/local/etc/php-fpm.d/www.conf
    ports: [ "80:80" ,"443:443" ]
    healthcheck: { test: [ "CMD", "curl", "-f", "http://localhost/health-check" ], interval: 30s, timeout: 10s, retries: 2 }
    environment: { PHP_IDE_CONFIG: "serverName=harun", XDEBUG_CONFIG: "remote_host=host.docker.internal" , PHP_XDEBUG: 1, PHP_XDEBUG_REMOTE_AUTOSTART: 1 }
    restart: always

  database:
    image: postgres:16-alpine  # Burada postgres imajını belirtiyoruz
    container_name: staj1_database
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
      POSTGRES_USER: ${POSTGRES_USER:-app}
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "${POSTGRES_DB:-app}", "-U", "${POSTGRES_USER:-app}"]
      timeout: 5s
      retries: 5
      start_period: 60s
    volumes:
      - database_data:/var/lib/postgresql/data

volumes:
  database_data:
